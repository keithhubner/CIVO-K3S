apiVersion: v1
kind: Service
metadata:
  name: ghost-svc
  labels:
    app: ghost
    tier: frontend
spec:
  selector:
    app: ghost
    tier: frontend
  ports:
  - protocol: TCP
    port: 2368
    targetPort: 2368  
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ghost-ingress
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: "traefik"
  labels:
    app: ghost
spec:
  tls:
  - hosts:
    - www.technicallyinteresting.com
    secretName: letsencrypt-prod
  rules:
  - host: www.technicallyinteresting.com
    http:
      paths:
      - path: /
        backend:
          serviceName: ghost-svc
          servicePort: 2368
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
      tier: frontend
  template:
    metadata:
      labels:
        app: ghost
        tier: frontend
    spec:
  #    securityContext:
  #      runAsUser: 1000
  #      runAsGroup: 50
      containers:
      - name: blog
        image: ghost
        imagePullPolicy: Always
        ports:
        - containerPort: 2368
        env:
        - name: url
          value: http://www.technicallyinteresting.com
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: ghost-mysql
        - name: database__connection__user
          value: root
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: database__connection__database
          value: ghost
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: ghost-vol
      volumes:
        - name: ghost-vol
          persistentVolumeClaim:
            claimName: ghost-pv-claim

